import Numeric
import Data.Char
import Data.List
import Data.String.Utils

preCode = [
	"[bits 32]",
	"push ebp",
	"mov ebp, esp",
	"mov ebp, dword [ebp+8]",
	"pusha",
	"call gen_checkWOW64",
	"gen_ret:",
	"gen_sLoadLibrary db \"LoadLibraryA\", 0",
	"gen_checkWOW64:",
	"pop esi",
	"sub esi, gen_ret",
	"mov eax, dword [ebp+8]",
	"lea ecx, [ebp+8]",
	"mov dword [ebp+8], 0",
	"test eax, eax",
	"jz gen_is32bit",
	"push ecx",
	"push -1",
	"call eax",
	"cmp dword [ebp+8], 0",
	"jz gen_is32bit",
	"call wow64Precode",
	"jmp gen_exit",
	"gen_is32bit:",
	"lea eax, [esi+gen_sLoadLibrary]",
	"push eax",
	"push dword [ebp]       ; kernel32 base",
	"call dword [ebp+4]      ; GetProcAddress",
	"push dword [ebp+4]",
	"push eax",
	"call _Start@8",
	"gen_exit:",
	"popa",
	"mov eax, [ebp+8]",
	"pop ebp",
	"ret"
	]
	
main :: IO ()
main = interact (unlines . parse . lines)

parse :: [String] -> [String]
parse x = preCode ++ x


